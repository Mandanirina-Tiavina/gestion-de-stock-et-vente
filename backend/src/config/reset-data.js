import pool from './database.js';

/**
 * R√©initialise les donn√©es dynamiques (produits, commandes, ventes, transactions).
 * Garde : utilisateurs, cat√©gories, couleurs
 */
async function resetData() {
  const client = await pool.connect();

  try {
    console.log('üöÄ R√©initialisation des donn√©es (products, orders, sales, transactions)...');

    await client.query('DELETE FROM transactions');
    console.log('‚úÖ Transactions supprim√©es');

    await client.query('DELETE FROM sales');
    console.log('‚úÖ Ventes supprim√©es');

    await client.query('DELETE FROM orders');
    console.log('‚úÖ Commandes supprim√©es');

    await client.query('DELETE FROM products');
    console.log('‚úÖ Produits supprim√©s');

    // R√©initialiser les s√©quences
    await client.query('ALTER SEQUENCE IF EXISTS transactions_id_seq RESTART WITH 1');
    await client.query('ALTER SEQUENCE IF EXISTS sales_id_seq RESTART WITH 1');
    await client.query('ALTER SEQUENCE IF EXISTS orders_id_seq RESTART WITH 1');
    await client.query('ALTER SEQUENCE IF EXISTS products_id_seq RESTART WITH 1');

    console.log('üéâ Toutes les donn√©es ont √©t√© r√©initialis√©es avec succ√®s !');
    console.log('üí° Cat√©gories, couleurs et utilisateurs conserv√©s');
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©initialisation des donn√©es:', error);
    throw error;
  } finally {
    client.release();
    await pool.end();
  }
}

resetData();
