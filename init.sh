#!/bin/bash

# Script d'initialisation automatique pour Gestion Stock & Ventes
# Usage: ./init.sh

set -e

echo "üöÄ Initialisation de l'application Gestion Stock & Ventes"
echo "=========================================================="
echo ""

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier les pr√©requis
echo "üìã V√©rification des pr√©requis..."
echo ""

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas install√©"
    echo "Installez Node.js depuis https://nodejs.org/"
    exit 1
fi
NODE_VERSION=$(node --version)
print_success "Node.js install√© : $NODE_VERSION"

# V√©rifier npm
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas install√©"
    exit 1
fi
NPM_VERSION=$(npm --version)
print_success "npm install√© : $NPM_VERSION"

# V√©rifier PostgreSQL
if ! command -v psql &> /dev/null; then
    print_warning "PostgreSQL n'est pas install√© ou pas dans le PATH"
    echo "Installez PostgreSQL depuis https://www.postgresql.org/"
else
    PSQL_VERSION=$(psql --version)
    print_success "PostgreSQL install√© : $PSQL_VERSION"
fi

echo ""
echo "üì¶ Installation des d√©pendances..."
echo ""

# Installer les d√©pendances du backend
echo "Backend..."
cd backend
npm install
print_success "D√©pendances backend install√©es"
cd ..

# Installer les d√©pendances du frontend
echo "Frontend..."
cd frontend
npm install
print_success "D√©pendances frontend install√©es"
cd ..

echo ""
echo "‚öôÔ∏è  Configuration..."
echo ""

# Cr√©er les fichiers .env s'ils n'existent pas
if [ ! -f backend/.env ]; then
    cp backend/.env.example backend/.env
    print_success "Fichier backend/.env cr√©√©"
    print_warning "N'oubliez pas de configurer DATABASE_URL et JWT_SECRET dans backend/.env"
else
    print_warning "backend/.env existe d√©j√†, non modifi√©"
fi

if [ ! -f frontend/.env ]; then
    cp frontend/.env.example frontend/.env
    print_success "Fichier frontend/.env cr√©√©"
else
    print_warning "frontend/.env existe d√©j√†, non modifi√©"
fi

echo ""
echo "üéâ Installation termin√©e !"
echo ""
echo "üìù Prochaines √©tapes :"
echo ""
echo "1. Configurez PostgreSQL :"
echo "   sudo -u postgres psql"
echo "   CREATE DATABASE gestion_stock;"
echo "   CREATE USER gestion_user WITH PASSWORD 'votre_mot_de_passe';"
echo "   GRANT ALL PRIVILEGES ON DATABASE gestion_stock TO gestion_user;"
echo "   \\q"
echo ""
echo "2. Modifiez backend/.env avec vos informations de base de donn√©es"
echo ""
echo "3. Ex√©cutez les migrations :"
echo "   cd backend && npm run migrate"
echo ""
echo "4. D√©marrez l'application :"
echo "   Terminal 1: cd backend && npm run dev"
echo "   Terminal 2: cd frontend && npm run dev"
echo ""
echo "5. Acc√©dez √† http://localhost:5173"
echo "   Username: admin"
echo "   Password: admin123"
echo ""
echo "üìö Documentation :"
echo "   - README.md : Documentation compl√®te"
echo "   - QUICK_START.md : Guide de d√©marrage rapide"
echo "   - USER_GUIDE.md : Guide utilisateur"
echo "   - DEPLOYMENT.md : Guide de d√©ploiement"
echo ""
print_success "Bonne utilisation ! üöÄ"
